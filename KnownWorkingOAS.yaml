openapi: 3.0.0
info:
  description: The documentation below is automatically extracted from an <rdfs:comment> annotation on the ontology RealEstateCore Core Module:<br/><br/>*The REC core module collects the top-level classes and properties that span over or are reused within multiple REC modules.<br/><br/>Note that this module reuses certain classes, properties, and named individuals from other vocabularies, e.g., GeoSPARQL; the copyright conditions on those reused entities are stated in their respective rdfs:comments annotations.*
  version: "3.0"
  title: RealEstateCore Core Module
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:5000/
components:
  schemas:
    Context:
      required:
      - '@vocab'
      - '@base'
      properties:
        '@vocab':
          type: string
          format: uri
          default: https://w3id.org/rec/core/
        '@base':
          type: string
          format: uri
      type: object
    Geometry:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: Geometry
        label:
          type: string
        asGML:
          type: array
          items:
            type: string
        asWKT:
          type: array
          items:
            type: string
        hasSerialization:
          type: array
          items:
            type: string
      type: object
    Agent:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: Agent
        label:
          type: string
      type: object
    Building:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: Building
        label:
          type: string
        hasBuildingComponent:
          type: array
          items:
            $ref: '#/components/schemas/BuildingComponent'
        hasGeoReferenceOrigo:
          $ref: '#/components/schemas/GeoReferenceOrigo'
      type: object
    BuildingComponent:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: BuildingComponent
        label:
          type: string
        containsMountedDevice:
          type: array
          items:
            $ref: '#/components/schemas/Device'
        hasSubBuildingComponent:
          type: array
          items:
            $ref: '#/components/schemas/BuildingComponent'
        hasSuperBuildingComponent:
          $ref: '#/components/schemas/BuildingComponent'
        isPartOfBuilding:
          $ref: '#/components/schemas/Building'
    Device:
      required:
      - isMountedInBuildingComponent
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: Device
        label:
          type: string
        associatedWithEvent:
          $ref: '#/components/schemas/Event'
        deviceMeasurementUnit:
          $ref: '#/components/schemas/MeasurementUnit'
        deviceQuantityKind:
          $ref: '#/components/schemas/QuantityKind'
        hasSubDevice:
          type: array
          items:
            $ref: '#/components/schemas/Device'
        hasSuperDevice:
          $ref: '#/components/schemas/Device'
        isMountedInBuildingComponent:
          $ref: '#/components/schemas/BuildingComponent'
        servesBuilding:
          $ref: '#/components/schemas/Building'
        servesBuildingComponent:
          type: array
          items:
            $ref: '#/components/schemas/BuildingComponent'
        servesDevice:
          type: array
          items:
            $ref: '#/components/schemas/Device'
      type: object
    Event:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: Event
        label:
          type: string
        eventMeasurementUnit:
          $ref: '#/components/schemas/MeasurementUnit'
        eventQuantityKind:
          $ref: '#/components/schemas/QuantityKind'
        hasCreatedTime:
          type: string
          format: date-time
        hasDeletedTime:
          type: array
          items:
            type: string
            format: date-time
        hasDuration:
          type: array
          items:
            type: number
            format: double
        hasObservationTime:
          type: array
          items:
            type: string
            format: date-time
        hasPointInTime:
          type: array
          items:
            type: string
            format: date-time
        hasReadTime:
          type: array
          items:
            type: string
            format: date-time
        hasStartTime:
          type: array
          items:
            type: string
            format: date-time
        hasStopTime:
          type: array
          items:
            type: string
            format: date-time
        hasUpdatedTime:
          type: array
          items:
            type: string
            format: date-time
      type: object
    GeoReferenceOrigo:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: GeoReferenceOrigo
        label:
          type: string
        hasGeoReferenceBearing:
          type: array
          items:
            type: number
            format: double
      type: object
    Land:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: Land
        label:
          type: string
      type: object
    MeasurementUnit:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: MeasurementUnit
        label:
          type: string
      type: object
    QuantityKind:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: QuantityKind
        label:
          type: string
        qkMeasurementUnit:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementUnit'
      type: object
    RealEstate:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: RealEstate
        label:
          type: string
        hasRealEstateComponent:
          type: array
          items:
            $ref: '#/components/schemas/RealEstateComponent'
      type: object
    RealEstateComponent:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: RealEstateComponent
        label:
          type: string
        isPartOfRealEstate:
          type: array
          items:
            $ref: '#/components/schemas/RealEstate'
      type: object
    Room:
      properties:
        '@context':
          $ref: '#/components/schemas/Context'
        '@id':
          type: string
        '@type':
          type: string
          default: Room
        label:
          type: string
      type: object
paths:
  /Geometry:
    get:
      summary: Get all 'Geometry' objects.
      responses:
        200:
          description: A paged array of 'Geometry' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/Geometry'
  /Agent:
    get:
      summary: Get all 'Agent' objects.
      responses:
        200:
          description: A paged array of 'Agent' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/Agent'
  /Building:
    get:
      summary: Get all 'Building' objects.
      responses:
        200:
          description: A paged array of 'Building' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/Building'
  /BuildingComponent:
    get:
      summary: Get all 'BuildingComponent' objects.
      responses:
        200:
          description: A paged array of 'BuildingComponent' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/BuildingComponent'
  /Device:
    get:
      summary: Get all 'Device' objects.
      responses:
        200:
          description: A paged array of 'Device' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/Device'
  /Event:
    get:
      summary: Get all 'Event' objects.
      responses:
        200:
          description: A paged array of 'Event' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/Event'
  /GeoReferenceOrigo:
    get:
      summary: Get all 'GeoReferenceOrigo' objects.
      responses:
        200:
          description: A paged array of 'GeoReferenceOrigo' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/GeoReferenceOrigo'
  /Land:
    get:
      summary: Get all 'Land' objects.
      responses:
        200:
          description: A paged array of 'Land' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/Land'
  /MeasurementUnit:
    get:
      summary: Get all 'MeasurementUnit' objects.
      responses:
        200:
          description: A paged array of 'MeasurementUnit' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/MeasurementUnit'
  /QuantityKind:
    get:
      summary: Get all 'QuantityKind' objects.
      responses:
        200:
          description: A paged array of 'QuantityKind' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/QuantityKind'
  /RealEstate:
    get:
      summary: Get all 'RealEstate' objects.
      responses:
        200:
          description: A paged array of 'RealEstate' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/RealEstate'
  /RealEstateComponent:
    get:
      summary: Get all 'RealEstateComponent' objects.
      responses:
        200:
          description: A paged array of 'RealEstateComponent' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/RealEstateComponent'
  /Room:
    get:
      summary: Get all 'Room' objects.
      responses:
        200:
          description: A paged array of 'Room' objects.
          content:
            application/jsonld:
              schema:
                $ref: '#/components/schemas/Room'
