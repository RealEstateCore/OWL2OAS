/*
 * RealEstateCore Core Module
 * The documentation below is automatically extracted from an <rdfs:comment> annotation on the ontology RealEstateCore Core Module:<br/><br/>*The REC core module collects the top-level classes and properties that span over or are reused within multiple REC modules.<br/><br/>Note that this module reuses certain classes, properties, and named individuals from other vocabularies, e.g., GeoSPARQL; the copyright conditions on those reused entities are stated in their respective rdfs:comments annotations.*
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Building;
import io.swagger.client.model.BuildingComponent;
import io.swagger.client.model.Context;
import io.swagger.client.model.Device;
import io.swagger.client.model.Event;
import io.swagger.client.model.MeasurementUnit;
import io.swagger.client.model.QuantityKind;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Device
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-16T06:50:30.499Z[GMT]")
public class Device {
  @SerializedName("@context")
  private Context _atContext = null;

  @SerializedName("@id")
  private String _atId = null;

  @SerializedName("@type")
  private String _atType = "Device";

  @SerializedName("label")
  private String label = null;

  @SerializedName("associatedWithEvent")
  private List<Event> associatedWithEvent = null;

  @SerializedName("deviceMeasurementUnit")
  private List<MeasurementUnit> deviceMeasurementUnit = null;

  @SerializedName("deviceQuantityKind")
  private List<QuantityKind> deviceQuantityKind = null;

  @SerializedName("hasSubDevice")
  private List<Device> hasSubDevice = null;

  @SerializedName("hasSuperDevice")
  private Device hasSuperDevice = null;

  @SerializedName("isMountedInBuildingComponent")
  private BuildingComponent isMountedInBuildingComponent = null;

  @SerializedName("servesBuilding")
  private List<Building> servesBuilding = null;

  @SerializedName("servesBuildingComponent")
  private List<BuildingComponent> servesBuildingComponent = null;

  @SerializedName("servesDevice")
  private List<Device> servesDevice = null;

  public Device _atContext(Context _atContext) {
    this._atContext = _atContext;
    return this;
  }

   /**
   * Get _atContext
   * @return _atContext
  **/
  @Schema(description = "")
  public Context getAtContext() {
    return _atContext;
  }

  public void setAtContext(Context _atContext) {
    this._atContext = _atContext;
  }

  public Device _atId(String _atId) {
    this._atId = _atId;
    return this;
  }

   /**
   * Get _atId
   * @return _atId
  **/
  @Schema(description = "")
  public String getAtId() {
    return _atId;
  }

  public void setAtId(String _atId) {
    this._atId = _atId;
  }

  public Device _atType(String _atType) {
    this._atType = _atType;
    return this;
  }

   /**
   * Get _atType
   * @return _atType
  **/
  @Schema(description = "")
  public String getAtType() {
    return _atType;
  }

  public void setAtType(String _atType) {
    this._atType = _atType;
  }

  public Device label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(description = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public Device associatedWithEvent(List<Event> associatedWithEvent) {
    this.associatedWithEvent = associatedWithEvent;
    return this;
  }

  public Device addAssociatedWithEventItem(Event associatedWithEventItem) {
    if (this.associatedWithEvent == null) {
      this.associatedWithEvent = new ArrayList<Event>();
    }
    this.associatedWithEvent.add(associatedWithEventItem);
    return this;
  }

   /**
   * Get associatedWithEvent
   * @return associatedWithEvent
  **/
  @Schema(description = "")
  public List<Event> getAssociatedWithEvent() {
    return associatedWithEvent;
  }

  public void setAssociatedWithEvent(List<Event> associatedWithEvent) {
    this.associatedWithEvent = associatedWithEvent;
  }

  public Device deviceMeasurementUnit(List<MeasurementUnit> deviceMeasurementUnit) {
    this.deviceMeasurementUnit = deviceMeasurementUnit;
    return this;
  }

  public Device addDeviceMeasurementUnitItem(MeasurementUnit deviceMeasurementUnitItem) {
    if (this.deviceMeasurementUnit == null) {
      this.deviceMeasurementUnit = new ArrayList<MeasurementUnit>();
    }
    this.deviceMeasurementUnit.add(deviceMeasurementUnitItem);
    return this;
  }

   /**
   * Get deviceMeasurementUnit
   * @return deviceMeasurementUnit
  **/
  @Schema(description = "")
  public List<MeasurementUnit> getDeviceMeasurementUnit() {
    return deviceMeasurementUnit;
  }

  public void setDeviceMeasurementUnit(List<MeasurementUnit> deviceMeasurementUnit) {
    this.deviceMeasurementUnit = deviceMeasurementUnit;
  }

  public Device deviceQuantityKind(List<QuantityKind> deviceQuantityKind) {
    this.deviceQuantityKind = deviceQuantityKind;
    return this;
  }

  public Device addDeviceQuantityKindItem(QuantityKind deviceQuantityKindItem) {
    if (this.deviceQuantityKind == null) {
      this.deviceQuantityKind = new ArrayList<QuantityKind>();
    }
    this.deviceQuantityKind.add(deviceQuantityKindItem);
    return this;
  }

   /**
   * Get deviceQuantityKind
   * @return deviceQuantityKind
  **/
  @Schema(description = "")
  public List<QuantityKind> getDeviceQuantityKind() {
    return deviceQuantityKind;
  }

  public void setDeviceQuantityKind(List<QuantityKind> deviceQuantityKind) {
    this.deviceQuantityKind = deviceQuantityKind;
  }

  public Device hasSubDevice(List<Device> hasSubDevice) {
    this.hasSubDevice = hasSubDevice;
    return this;
  }

  public Device addHasSubDeviceItem(Device hasSubDeviceItem) {
    if (this.hasSubDevice == null) {
      this.hasSubDevice = new ArrayList<Device>();
    }
    this.hasSubDevice.add(hasSubDeviceItem);
    return this;
  }

   /**
   * Get hasSubDevice
   * @return hasSubDevice
  **/
  @Schema(description = "")
  public List<Device> getHasSubDevice() {
    return hasSubDevice;
  }

  public void setHasSubDevice(List<Device> hasSubDevice) {
    this.hasSubDevice = hasSubDevice;
  }

  public Device hasSuperDevice(Device hasSuperDevice) {
    this.hasSuperDevice = hasSuperDevice;
    return this;
  }

   /**
   * Get hasSuperDevice
   * @return hasSuperDevice
  **/
  @Schema(description = "")
  public Device getHasSuperDevice() {
    return hasSuperDevice;
  }

  public void setHasSuperDevice(Device hasSuperDevice) {
    this.hasSuperDevice = hasSuperDevice;
  }

  public Device isMountedInBuildingComponent(BuildingComponent isMountedInBuildingComponent) {
    this.isMountedInBuildingComponent = isMountedInBuildingComponent;
    return this;
  }

   /**
   * Get isMountedInBuildingComponent
   * @return isMountedInBuildingComponent
  **/
  @Schema(required = true, description = "")
  public BuildingComponent getIsMountedInBuildingComponent() {
    return isMountedInBuildingComponent;
  }

  public void setIsMountedInBuildingComponent(BuildingComponent isMountedInBuildingComponent) {
    this.isMountedInBuildingComponent = isMountedInBuildingComponent;
  }

  public Device servesBuilding(List<Building> servesBuilding) {
    this.servesBuilding = servesBuilding;
    return this;
  }

  public Device addServesBuildingItem(Building servesBuildingItem) {
    if (this.servesBuilding == null) {
      this.servesBuilding = new ArrayList<Building>();
    }
    this.servesBuilding.add(servesBuildingItem);
    return this;
  }

   /**
   * Get servesBuilding
   * @return servesBuilding
  **/
  @Schema(description = "")
  public List<Building> getServesBuilding() {
    return servesBuilding;
  }

  public void setServesBuilding(List<Building> servesBuilding) {
    this.servesBuilding = servesBuilding;
  }

  public Device servesBuildingComponent(List<BuildingComponent> servesBuildingComponent) {
    this.servesBuildingComponent = servesBuildingComponent;
    return this;
  }

  public Device addServesBuildingComponentItem(BuildingComponent servesBuildingComponentItem) {
    if (this.servesBuildingComponent == null) {
      this.servesBuildingComponent = new ArrayList<BuildingComponent>();
    }
    this.servesBuildingComponent.add(servesBuildingComponentItem);
    return this;
  }

   /**
   * Get servesBuildingComponent
   * @return servesBuildingComponent
  **/
  @Schema(description = "")
  public List<BuildingComponent> getServesBuildingComponent() {
    return servesBuildingComponent;
  }

  public void setServesBuildingComponent(List<BuildingComponent> servesBuildingComponent) {
    this.servesBuildingComponent = servesBuildingComponent;
  }

  public Device servesDevice(List<Device> servesDevice) {
    this.servesDevice = servesDevice;
    return this;
  }

  public Device addServesDeviceItem(Device servesDeviceItem) {
    if (this.servesDevice == null) {
      this.servesDevice = new ArrayList<Device>();
    }
    this.servesDevice.add(servesDeviceItem);
    return this;
  }

   /**
   * Get servesDevice
   * @return servesDevice
  **/
  @Schema(description = "")
  public List<Device> getServesDevice() {
    return servesDevice;
  }

  public void setServesDevice(List<Device> servesDevice) {
    this.servesDevice = servesDevice;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Device device = (Device) o;
    return Objects.equals(this._atContext, device._atContext) &&
        Objects.equals(this._atId, device._atId) &&
        Objects.equals(this._atType, device._atType) &&
        Objects.equals(this.label, device.label) &&
        Objects.equals(this.associatedWithEvent, device.associatedWithEvent) &&
        Objects.equals(this.deviceMeasurementUnit, device.deviceMeasurementUnit) &&
        Objects.equals(this.deviceQuantityKind, device.deviceQuantityKind) &&
        Objects.equals(this.hasSubDevice, device.hasSubDevice) &&
        Objects.equals(this.hasSuperDevice, device.hasSuperDevice) &&
        Objects.equals(this.isMountedInBuildingComponent, device.isMountedInBuildingComponent) &&
        Objects.equals(this.servesBuilding, device.servesBuilding) &&
        Objects.equals(this.servesBuildingComponent, device.servesBuildingComponent) &&
        Objects.equals(this.servesDevice, device.servesDevice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_atContext, _atId, _atType, label, associatedWithEvent, deviceMeasurementUnit, deviceQuantityKind, hasSubDevice, hasSuperDevice, isMountedInBuildingComponent, servesBuilding, servesBuildingComponent, servesDevice);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Device {\n");
    
    sb.append("    _atContext: ").append(toIndentedString(_atContext)).append("\n");
    sb.append("    _atId: ").append(toIndentedString(_atId)).append("\n");
    sb.append("    _atType: ").append(toIndentedString(_atType)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    associatedWithEvent: ").append(toIndentedString(associatedWithEvent)).append("\n");
    sb.append("    deviceMeasurementUnit: ").append(toIndentedString(deviceMeasurementUnit)).append("\n");
    sb.append("    deviceQuantityKind: ").append(toIndentedString(deviceQuantityKind)).append("\n");
    sb.append("    hasSubDevice: ").append(toIndentedString(hasSubDevice)).append("\n");
    sb.append("    hasSuperDevice: ").append(toIndentedString(hasSuperDevice)).append("\n");
    sb.append("    isMountedInBuildingComponent: ").append(toIndentedString(isMountedInBuildingComponent)).append("\n");
    sb.append("    servesBuilding: ").append(toIndentedString(servesBuilding)).append("\n");
    sb.append("    servesBuildingComponent: ").append(toIndentedString(servesBuildingComponent)).append("\n");
    sb.append("    servesDevice: ").append(toIndentedString(servesDevice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
